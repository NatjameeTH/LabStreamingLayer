
# Metadata ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
from pylsl import StreamInlet, resolve_streams

def get_stream_metadata():
    """‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ streams ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á metadata ‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•"""
    
    results = resolve_streams()

    if not results:
        print(" No streams found!")
        return

    print(f" Found {len(results)} stream(s).")

    inlet = StreamInlet(results[0])
    info = inlet.info()

    # ‡πÅ‡∏™‡∏î‡∏á XML metadata ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    print("\n The stream's XML meta-data:")
    xml_data = info.as_xml()
    print(xml_data)  # ‡∏û‡∏¥‡∏°‡∏û‡πå XML ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

    #  ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ú‡∏•‡∏¥‡∏ï
    manufacturer = info.desc().child_value("manufacturer") if info.desc() else None
    print(f" Manufacturer: {manufacturer if manufacturer else ' Not found'}")

    # ‡∏î‡∏∂‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏°‡∏ß‡∏Å EEG
    cap_size = info.desc().child("cap").child_value("size") if info.desc().child("cap") else None
    print(f"Cap circumference: {cap_size if cap_size else ' Not found'}")

    # üì° ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì EEG
    print("\nüì° Channel labels:")
    channels = info.desc().child("channels") if info.desc() else None

    if channels:
        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô XML
        channel_labels = []
        ch = channels.child("channel")
        while ch:
            label = ch.child_value("label")
            if label:
                channel_labels.append(label)
            ch = ch.next_sibling()

        if channel_labels:
            print("  " + ", ".join(channel_labels))
        else:
            print("‚ö†Ô∏è No channel labels found.")
    else:
        print("‚ö†Ô∏è No channel metadata found.")

if __name__ == '__main__':
    get_stream_metadata()
